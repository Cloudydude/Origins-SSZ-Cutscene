// Set eggman/eggrobo to burned state
//# address-hook(0x07cbce) end(0x07cc10)
function void fn07cbce()
{
	base.fn07cbce()
	if (objA0.update_address == 0x08565e)
	{
		A1 = 0xffffb378
		objA1.base_state = 0x04
	}
}

// Load burned sprite
//# address-hook(0x067cba) end(0x067ccc)
function void fn067cba()
{
	if (global.zone_act == 0x0a01)
		objA0.animation.sprite = 3
	else
		base.fn067cba()
}

//# address-hook(0x07cc26) end(0x07cc34)
function void fn07cc26()
{
	if (isMainCharacter(CHARACTER_KNUCKLES))
	{
		// Eggrobo pops an animal and adds points to your score
		addScore(10) // add 100 points
		if (allocDynamicObjectStd())
		{
			// Spawn floating points display
			objA1.update_address = 0x02cce0
			objA1.position.x.u16 = objA0.position.x.u16
			objA1.position.y.u16 = objA0.position.y.u16
			objA1.animation.sprite = 0x00
		}
		objA1.update_address = 0x01e5e0 // Spawn the small explosion 
	}
	else
	{
		// Eggman falls out of his egg mobile
		if (allocDynamicObjectStd())
		{
			u8[A1 + 0x04] = (render_flag.WORLD)
			objA1.update_address = 0x200070
			objA1.position.x.u16 = objA0.position.x.u16
			objA1.position.y.u16 = objA0.position.y.u16
			objA1.state = 0
			objA1.sprite_attributes = objA0.sprite_attributes
			objA1.velocity.x = 0xD0
			objA1.velocity.y = -0x330
			// Audio.playAudio("Robotnik_AOSTH", AudioContext.CONTEXT_SOUND)
			// objA1.velocity.y = -0x310
			// objA1.velocity.y = -0x2F8
			// objA1.position.y.u16 += 0xf
			// objA1.state = 0
			// objA1.animation.sprite = 0x00
		}
	}
	base.fn07cc26()
}

//# address-hook(0x200070)
function void Thing()
{
	if (objA0.velocity.y >= 0xb28)
	{
		UnloadObject() // despawn falling eggman
		return
	}

	objA0.box_size.y = 40
	objA0.position.x += objA0.velocity.x
	UpdateMovementSimple()
	DrawObject() // spawn falling eggman
}

// Sonic and Tails escaping

// escaping the claw
//# address-hook(0x07cc3a) end(0x07cc62)
function void fn07cc3a()
{
	base.fn07cc3a()

	if (u8[0xffffe654] != 0)
	{
		XtraEscape()
		return
	}

	if (isMainCharacter(CHARACTER_KNUCKLES))
		return

	SonicTailsEscaping()
}

function void XtraEscape()
{
	if (!isMainCharacter(CHARACTER_KNUCKLES))
		SonicTailsEscaping()
}

function void SonicTailsEscaping()
{
	A1 = 0xffffb000
	// objA0.position.x.u16 = objA1.position.x.u16
	// objA0.position.y.u16 = objA1.position.y.u16
	// objA0.velocity.x = 0x0400
	objA0.velocity.y = (isMainCharacter(CHARACTER_SONIC)) ? 0x320 : 0x1e0 // (isMainCharacter(CHARACTER_TAILS))
	
	if (isMainCharacter(CHARACTER_SONIC))
	{
		Audio.playAudio("dropdash_charge", AudioContext.CONTEXT_SOUND)
		u8[A1 + 0x20] = char.state.SONIC_DROPDASH
	}
	else //(isMainCharacter(CHARACTER_TAILS))
	{
		playSound(0xba)
		objA1.animation.sprite = 0xa0
		u8[A1 + 0x20] = char.state.TAILS_FLYDOWN
	}
}

function bool skipPart()
{
	A1 = 0xffffb000

	bool skip = false
	D0.u16 = objA0.position.x.u16
	if (D0.u16 > 0x08)
	{
		D1.u16 = objA1.position.x.u16
		if (D1.u16 < D0.u16 - 0x0c)
		{
			skip = true
		}
		else if (D1.u16 >= D0.u16 + 0x0c)
		{
			skip = true
		}
	}
	return skip
}

function void XtraInClaw()
{
	if (!isMainCharacter(CHARACTER_KNUCKLES))
		SonicTailsInClaw()
}

function void SonicTailsInClaw()
{
	u8[A1 + 0x20] = char.state.LIFTED
	objA1.animation.sprite = (isMainCharacter(CHARACTER_TAILS)) ? 0xb6 : 0xc9
}

// In the claw
//# address-hook(0x07cd82) end(0x07ce18)
function void fn07cd82()
{
	base.fn07cd82()

	if (!skipPart())
	{
		A1 = 0xffffb000
		global.level_started = 0 // turn off hud



		if (u8[0xffffe654] != 0)
		{
			XtraInClaw()
			return
			// return
			// somefunction()
			// leave some example code in a function
			// to demonstrate how to make your own version
		}


		if (isMainCharacter(CHARACTER_KNUCKLES))
			return

		SonicTailsInClaw()
	}
}

// Character position in claw
//# address-hook(0x07ce42) end(0x07ce66)
function void fn07ce42()
{
	base.fn07ce42()

	if (u8[0xffffe654] != 0)
	{
		XtraClawcords()
		return
	}

	if (isMainCharacter(CHARACTER_KNUCKLES))
		return

	SonicTailsClaw()
}

function void SonicTailsClaw()
{
    if ((u8[0xfffffab8] & 0x20) == 0)
    {
        u8 adjust = (isMainCharacter(CHARACTER_TAILS)) ? 1 : 3
        A1 = 0xffffb000
        objA1.position.x.u16 -= adjust
        objA1.position.y.u16 -= 6
    }
}

function void XtraClawcords()
{
    if (!isMainCharacter(CHARACTER_KNUCKLES))
    {
        SonicTailsClaw()
    }
}

function bool XtraOnGround()
{
	if (isMainCharacter(CHARACTER_KNUCKLES))
		return false
	SonicTailsGround()
	return true
}

function void SonicTailsGround()
{
	UpdateMovementStraightSimple()
	A1 = 0xffffb000
	objA1.position.x.u16 = objA0.position.x.u16
	objA1.position.y.u16 = objA0.position.y.u16
	D0.u16 = objA0.position.x.u16

	if (isMainCharacter(CHARACTER_SONIC))
	{
		// System.writeDisplayLine(stringformat("u16[A1 + 0x14] = %x", u16[A1 + 0x14] ))
		CheckGroundCollision()
		// System.writeDisplayLine(stringformat("D0.u16 = %d", D0.u16))
		if (D1.u16 <= 14)
		{

			u8[0xffffb000 + 0x2e] = 0
			StopObjectA1()


			if (u8[0xffffb000 + 0x20] != char.state.ROLLING)
			{
				Audio.playAudio("dropdash_release", AudioContext.CONTEXT_SOUND)
				// dust
				u8[A6 + 0x20] = 0x02
				u16[A6 + 0x10] = u16[0xffffb000 + 0x10]
				u16[A6 + 0x14] = (0x4AC)
				u8[A6 + 0x23] = 0x01
				u8[A6 + 0x2a] = char.flags & char.flag.FACING_LEFT
				u8[0xffffb000 + 0x22] = 0x96
			}
			// char.groundspeed
			s16[0xffffb000 + 0x1c] = objA0.velocity.x = 0x0800
			objA0.velocity.y = 0
			u16[0xffffb000 + 0x14] = 0x4b1
			player1.control_override = 0xff // Disable P1's controls

			u8[0xffffb000 + 0x20] = char.state.ROLLING
			u8[0xffffb000 + 0x2a] |= char.flag.ROLLING
		}
	}
	else // (isMainCharacter(CHARACTER_TAILS))
	{
		CheckGroundCollision()
		// System.writeDisplayLine(stringformat("D1.u16 = %d", D1.u16))
		if (D1.u16 <= 9)
		{
			u8[0xffffb000 + 0x2e] = 0
			StopObjectA1()
			
			u16[0xffffb000 + 0x14] = 0x4b0
			s16[0xffffb000 + 0x1c] = objA0.velocity.x
			objA0.velocity.y = 0
			player1.control_override = 0xff // Disable P1's controls
			control.player1 = 0x0808
		}
	}
	if (D0.u16 < level.bossarea.right)
		return
	
	player1.control_override = 0

	if (isMainCharacter(CHARACTER_TAILS))
		s16[0xffffb000 + 0x1c] = 0

	objA0.update_address = 0x07ccb0
	objA0.countdown_value = 0x06
	objA0.velocity.x = 0
	objA0.velocity.y = 0
	objA0.hitbox_extends.y = (isMainCharacter(CHARACTER_TAILS)) ? 0x10 : 0x0e
}

// On the ground
//# address-hook(0x07cc68) end(0x07ccaa)
function void fn07cc68()
{
	if (u8[0xffffe654] != 0)
	{
		if (XtraOnGround())
		{
			Hudflysin()
			return
		}
	}

	if (isMainCharacter(CHARACTER_KNUCKLES))
		base.fn07cc68()
	else
		SonicTailsGround()

	Hudflysin()
}

function void Hudflysin()
{
	if (D0.u16 < level.bossarea.right)
		return
	global.level_started = -0x6f // let hud fly in
}



global bool Egg.Glasses

function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{

	if (objA0.update_address == 0x200070)
	{
		// if modded sprites not detected, use the default sprites
		u8 animationSpriteEx = ((global.framecounter >> 2) & 0x03)
		u64 key = stringformat("eggman-modded-0%d", animationSpriteEx)
		if (!Renderer.hasCustomSprite(key))
		{
			u64 eggs = (Egg.Glasses) ? "blue_glasses" : "black"
			key = stringformat("eggman-%s-0%d", eggs, animationSpriteEx)
		}

		Renderer.drawCustomSprite(key, px, py, 0, SPRITE_FLAG_PRIO, renderQueue)
		return true
	}
	return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}
